{"ast":null,"code":"var _jsxFileName = \"/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/EditMovieComp.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { doEditMovie } from '../redux/MoviesActions';\nimport Grid from \"@mui/material/Grid\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moviesUrl = 'http://localhost:8000/movies';\n\nconst EditMovieComp = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    username,\n    movieid\n  } = useParams();\n  const movies = useSelector(state => state.MoviesReducer.movies);\n  const movie = movies.find(movie => movie._id === movieid);\n  const [movieEdit, setMovieEdit] = useState(movie);\n  const [startDate, setStartDate] = useState(new Date());\n  console.log(movieEdit.yearPremiered);\n\n  const update = async () => {\n    console.log(movieEdit.premiered);\n    const {\n      data\n    } = await axios.put(`${moviesUrl}/${movie._id}`, movieEdit);\n    dispatch(doEditMovie(movieEdit));\n    console.log(data);\n    console.log(movieEdit);\n    navigate('/mainpage');\n  };\n\n  const cancel = () => {\n    navigate('/mainpage');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: '50%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: 17\n          },\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: [\"Edit Movie: \", movie.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-textarea\",\n              label: \"Name:\",\n              value: movieEdit.name,\n              multiline: true,\n              name: \"name\",\n              onChange: e => setMovieEdit({ ...movieEdit,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-textarea\",\n              label: \"Genres:\",\n              value: movieEdit.genres,\n              multiline: true,\n              name: \"genres\",\n              onChange: e => setMovieEdit({ ...movieEdit,\n                genres: e.target.value.split(',')\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-textarea\",\n              label: \"Image URL:\",\n              value: movieEdit.image,\n              multiline: true,\n              name: \"image\",\n              onChange: e => setMovieEdit({ ...movieEdit,\n                image: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"image\",\n              label: \"Premired:\",\n              type: \"date\",\n              value: movieEdit.yearPremiered.split('T')[0],\n              InputLabelProps: {\n                shrink: true,\n                required: true\n              },\n              onChange: e => setMovieEdit({ ...movieEdit,\n                yearPremiered: e.target.value + \"T00:00:00.000Z\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: update,\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: cancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), \" \", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditMovieComp, \"64yy0RgGU5dmuU8zzAB7Mm6Yc3M=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector];\n});\n\n_c = EditMovieComp;\nexport default EditMovieComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovieComp\");","map":{"version":3,"sources":["/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/EditMovieComp.js"],"names":["axios","useState","useParams","useNavigate","useSelector","useDispatch","doEditMovie","Grid","Card","CardActions","CardContent","Button","Typography","TextField","moviesUrl","EditMovieComp","dispatch","navigate","username","movieid","movies","state","MoviesReducer","movie","find","_id","movieEdit","setMovieEdit","startDate","setStartDate","Date","console","log","yearPremiered","update","premiered","data","put","cancel","marginTop","width","fontSize","name","e","target","value","genres","split","image","shrink","required"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,SAAS,GAAG,8BAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM;AAAEe,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAwBjB,SAAS,EAAvC;AACA,QAAMkB,MAAM,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,aAAN,CAAoBF,MAA9B,CAA1B;AACA,QAAMG,KAAK,GAAGH,MAAM,CAACI,IAAP,CAAaD,KAAD,IAAUA,KAAK,CAACE,GAAN,KAAcN,OAApC,CAAd;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAACsB,KAAD,CAA1C;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,IAAI6B,IAAJ,EAAD,CAA1C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACO,aAAtB;;AAEA,QAAMC,MAAM,GAAG,YAAY;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAS,CAACS,SAAtB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMpC,KAAK,CAACqC,GAAN,CAAW,GAAEvB,SAAU,IAAGS,KAAK,CAACE,GAAI,EAApC,EAAuCC,SAAvC,CAAvB;AACAV,IAAAA,QAAQ,CAACV,WAAW,CAACoB,SAAD,CAAZ,CAAR;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACAT,IAAAA,QAAQ,CAAC,WAAD,CAAR;AACH,GAPD;;AASA,QAAMqB,MAAM,GAAG,MAAM;AACjBrB,IAAAA,QAAQ,CAAC,WAAD,CAAR;AACH,GAFD;;AAIF,sBACE;AAAK,IAAA,KAAK,EAAE;AAACsB,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA,2BAEJ,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA,8BACM,QAAC,WAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAAhB;AAAkC,UAAA,KAAK,EAAC,gBAAxC;AAAyD,UAAA,YAAY,MAArE;AAAA,qCACiBlB,KAAK,CAACmB,IADvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,SAAS,EAAE,QAA3B;AAAqC,UAAA,OAAO,EAAE,CAA9C;AAAA,kCACA,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACU,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,mBADL;AAEE,cAAA,KAAK,EAAC,OAFR;AAGE,cAAA,KAAK,EAAEhB,SAAS,CAACgB,IAHnB;AAIE,cAAA,SAAS,MAJX;AAKE,cAAA,IAAI,EAAC,MALP;AAME,cAAA,QAAQ,EAAGC,CAAD,IACThB,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBgB,gBAAAA,IAAI,EAAEC,CAAC,CAACC,MAAF,CAASC;AAA/B,eAAD;AAPf;AAAA;AAAA;AAAA;AAAA;AADV;AAAA;AAAA;AAAA;AAAA,kBADA,eAaQ,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,mBADL;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,KAAK,EAAEnB,SAAS,CAACoB,MAHnB;AAIE,cAAA,SAAS,MAJX;AAKE,cAAA,IAAI,EAAC,QALP;AAME,cAAA,QAAQ,EAAGH,CAAD,IACNhB,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBoB,gBAAAA,MAAM,EAAEH,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeE,KAAf,CAAqB,GAArB;AAAxB,eAAD;AAPlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbR,eAyBQ,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,mBADL;AAEE,cAAA,KAAK,EAAC,YAFR;AAGE,cAAA,KAAK,EAAErB,SAAS,CAACsB,KAHnB;AAIE,cAAA,SAAS,MAJX;AAKE,cAAA,IAAI,EAAC,OALP;AAME,cAAA,QAAQ,EAAGL,CAAD,IACVhB,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBsB,gBAAAA,KAAK,EAAEL,CAAC,CAACC,MAAF,CAASC;AAAhC,eAAD;AAPd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAzBR,eAqCQ,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,SAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,KAAK,EAAC,WAFR;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,KAAK,EAAEnB,SAAS,CAACO,aAAV,CAAwBc,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAJT;AAKE,cAAA,eAAe,EAAE;AAAEE,gBAAAA,MAAM,EAAE,IAAV;AAAgBC,gBAAAA,QAAQ,EAAE;AAA1B,eALnB;AAME,cAAA,QAAQ,EAAGP,CAAD,IACVhB,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBO,gBAAAA,aAAa,EAAGU,CAAC,CAACC,MAAF,CAASC,KAAT,GAAe;AAA/C,eAAD;AAPd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBArCR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,eAyDM,QAAC,WAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEX,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACgE,GADhE,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEI,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,OAEgE,GAFhE;AAAA;AAAA;AAAA;AAAA;AAAA,cAzDN;AAAA;AAAA;AAAA;AAAA;AAAA;AAFI;AAAA;AAAA;AAAA;AAAA,UADF;AAmED,CA1FD;;GAAMvB,a;UACeV,W,EACAF,W,EACaD,S,EACfE,W;;;KAJbW,a;AA4FN,eAAeA,aAAf","sourcesContent":["import axios from 'axios'\nimport { useState } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { doEditMovie } from '../redux/MoviesActions';\n\nimport Grid from \"@mui/material/Grid\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from \"@mui/material/TextField\";\n\nconst moviesUrl = 'http://localhost:8000/movies';\n\nconst EditMovieComp = () => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate();\n    const { username, movieid } = useParams();\n    const movies = useSelector(state => state.MoviesReducer.movies);\n    const movie = movies.find((movie)=> movie._id === movieid)\n    const [movieEdit, setMovieEdit] = useState(movie)\n    const [startDate, setStartDate] = useState(new Date());\n    console.log(movieEdit.yearPremiered)\n\n    const update = async () => {\n        console.log(movieEdit.premiered)\n        const { data } = await axios.put(`${moviesUrl}/${movie._id}`, movieEdit);\n        dispatch(doEditMovie(movieEdit));\n        console.log(data);\n        console.log(movieEdit);\n        navigate('/mainpage')\n    }\n\n    const cancel = () => {\n        navigate('/mainpage')\n    }\n\n  return (\n    <div style={{marginTop: '20px'}}>\n \n<Card sx={{ width: '50%' }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 17 }} color=\"text.secondary\" gutterBottom>\n            Edit Movie: {movie.name} \n        </Typography>   \n        <Grid container direction={\"column\"} spacing={3}>\n        <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Name:\"\n                    value={movieEdit.name}\n                    multiline\n                    name=\"name\"\n                    onChange={(e) =>\n                     setMovieEdit({ ...movieEdit, name: e.target.value })\n                    }\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Genres:\"\n                    value={movieEdit.genres}\n                    multiline\n                    name=\"genres\"\n                    onChange={(e) =>\n                        setMovieEdit({ ...movieEdit, genres: e.target.value.split(',') })\n                    }\n                    />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Image URL:\"\n                    value={movieEdit.image}\n                    multiline\n                    name=\"image\"\n                    onChange={(e) =>\n                    setMovieEdit({ ...movieEdit, image: e.target.value })\n                    }\n                    />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    name=\"image\"\n                    label=\"Premired:\"\n                    type=\"date\"\n                    value={movieEdit.yearPremiered.split('T')[0]}\n                    InputLabelProps={{ shrink: true, required: true }}\n                    onChange={(e) =>\n                    setMovieEdit({ ...movieEdit, yearPremiered : e.target.value+\"T00:00:00.000Z\" })\n                    }\n                    />\n                </Grid>\n\n                </Grid>\n      </CardContent>\n      <CardActions>\n        <Button variant=\"contained\" onClick={update}>update</Button> {' '}\n        <Button variant=\"contained\" onClick={cancel}>Cancel</Button> {' '}\n      </CardActions>\n    </Card>\n    </div>\n  )\n}\n\nexport default EditMovieComp"]},"metadata":{},"sourceType":"module"}