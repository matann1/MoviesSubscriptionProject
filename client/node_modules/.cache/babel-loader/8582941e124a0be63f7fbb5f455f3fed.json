{"ast":null,"code":"var _jsxFileName = \"/Users/matanneyman/Desktop/full stack/finalProject/client/src/components/UsersManagement.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport Grid from \"@mui/material/Grid\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from \"@mui/material/TextField\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { doEditUser } from '../redux/UsersActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usersUrl = 'http://localhost:8000/users';\n\nconst UsersManagement = () => {\n  _s();\n\n  const {\n    username\n  } = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const users = useSelector(state => state.UsersReducer.users);\n  const user = users.find(user => user.username === username);\n  const [editUser, setEditUser] = useState(user);\n  const [editUserErrors, setEditUserErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmit(true);\n    setEditUserErrors(validate(editUser));\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (Object.keys(editUserErrors).length === 0 && isSubmit) {\n        try {\n          const {\n            data\n          } = await axios.put(`${usersUrl}/${user._id}`, editUser);\n          console.log(data);\n          setEditUser(editUser);\n          dispatch(doEditUser(editUser));\n          sessionStorage.setItem('key', editUser.username.charAt(0).toUpperCase() + editUser.username.slice(1));\n          navigate('/mainpage');\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    })();\n  }, [editUserErrors]);\n\n  const cancel = () => {\n    navigate('/mainpage');\n  };\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.fullName) {\n      errors.fullName = \"Full Name is required!\";\n    }\n\n    if (!values.username) {\n      errors.username = \"Username is required!\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required!\";\n    } else if (values.password.length < 5) {\n      errors.password = \"Password must be more than 5 characters!\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '20px',\n      marginLeft: '10px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: '50%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: 17\n            },\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: [\"Hi: \", user === null || user === void 0 ? void 0 : user.fullName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Name:\",\n                value: editUser.fullName,\n                multiline: true,\n                name: \"fullName\",\n                onChange: e => setEditUser({ ...editUser,\n                  fullName: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                color: 'red'\n              },\n              children: editUserErrors.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"username:\",\n                value: editUser.username,\n                multiline: true,\n                name: \"username\",\n                onChange: e => setEditUser({ ...editUser,\n                  username: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                color: 'red'\n              },\n              children: editUserErrors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"password:\",\n                value: editUser.password,\n                type: \"password\",\n                name: \"password\",\n                onChange: e => setEditUser({ ...editUser,\n                  password: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                color: 'red'\n              },\n              children: editUserErrors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"UPDATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: cancel,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), \" \", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersManagement, \"7MdcAatmd5b56hL0RRrsuH3Wwag=\", false, function () {\n  return [useParams, useDispatch, useNavigate, useSelector];\n});\n\n_c = UsersManagement;\nexport default UsersManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersManagement\");","map":{"version":3,"sources":["/Users/matanneyman/Desktop/full stack/finalProject/client/src/components/UsersManagement.js"],"names":["axios","Grid","Card","CardContent","Button","Typography","TextField","useState","useEffect","useNavigate","useParams","useSelector","useDispatch","doEditUser","usersUrl","UsersManagement","username","dispatch","navigate","users","state","UsersReducer","user","find","editUser","setEditUser","editUserErrors","setEditUserErrors","isSubmit","setIsSubmit","handleSubmit","e","preventDefault","validate","Object","keys","length","data","put","_id","console","log","sessionStorage","setItem","charAt","toUpperCase","slice","err","cancel","values","errors","fullName","password","marginTop","marginLeft","width","fontSize","target","value","color"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport Grid from \"@mui/material/Grid\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from \"@mui/material/TextField\";\n\nimport { useState, useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { doEditUser } from '../redux/UsersActions';\n\nconst usersUrl = 'http://localhost:8000/users';\n\nconst UsersManagement = () => {\n    const { username } = useParams();\n    const dispatch = useDispatch()\n    const navigate = useNavigate();\n    const users = useSelector(state => state.UsersReducer.users);\n    const user = users.find((user)=> user.username === username);\n    const [editUser, setEditUser] = useState(user)\n    const [editUserErrors, setEditUserErrors] = useState({})\n    const [isSubmit, setIsSubmit] = useState(false)\n  \n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      setIsSubmit(true);\n      setEditUserErrors(validate(editUser));\n    };\n  \n    useEffect(() => {\n      (async () => {if(Object.keys(editUserErrors).length === 0 && isSubmit){\n          try{\n        const { data } = await axios.put(`${usersUrl}/${user._id}`, editUser);\n        console.log(data)\n        setEditUser(editUser);\n        dispatch(doEditUser(editUser));\n        sessionStorage.setItem('key', (editUser.username.charAt(0).toUpperCase()) + editUser.username.slice(1));\n        navigate('/mainpage')\n    }\n    catch(err){\n        console.log(err)\n    }\n      }})()\n    }, [editUserErrors])\n    \n    const cancel = () => {\n      navigate('/mainpage')\n  }\n  \n    const validate = (values) => {\n      const errors = {}\n      if(!values.fullName) {\n          errors.fullName = \"Full Name is required!\";\n      }\n      if(!values.username) {\n          errors.username = \"Username is required!\";\n      }\n      if(!values.password) {\n          errors.password = \"Password is required!\";\n      }else if(values.password.length < 5){\n          errors.password = \"Password must be more than 5 characters!\"\n      }\n      \n      return errors;\n    }\n\n  return (\n    <div style={{marginTop: '20px', marginLeft: '10px'}}>\n      <Card sx={{ width: '50%' }}>\n      <form onSubmit={handleSubmit}>\n      <CardContent>\n        <Typography sx={{ fontSize: 17 }} color=\"text.secondary\" gutterBottom>\n            Hi: {user?.fullName} \n        </Typography>   \n        <Grid container direction={\"column\"} spacing={3}>\n        <Grid item>\n                  <TextField\n                    label=\"Name:\"\n                    value={editUser.fullName}\n                    multiline\n                    name=\"fullName\"\n                    onChange={(e) =>\n                     setEditUser({ ...editUser, fullName: e.target.value })\n                    }\n                  />\n                </Grid>\n                <Grid item style={{color: 'red'}}>\n                    {editUserErrors.fullName}\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"username:\"\n                    value={editUser.username}\n                    multiline\n                    name=\"username\"\n                    onChange={(e) =>\n                        setEditUser({ ...editUser, username: e.target.value })\n                    }\n                    />\n                </Grid>\n                <Grid item style={{color: 'red'}}>\n                    {editUserErrors.username}\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"password:\"\n                    value={editUser.password}\n                    type=\"password\"\n                    name=\"password\"\n                    onChange={(e) =>\n                    setEditUser({ ...editUser, password: e.target.value })\n                    }\n                    />\n                </Grid>\n                <Grid item style={{color: 'red'}}>\n                    {editUserErrors.password}\n                </Grid>\n                <Grid item>\n                  <Button type=\"submit\" variant=\"contained\">\n                    UPDATE\n                  </Button>{\" \"}\n                  <Button variant=\"contained\" onClick={cancel}>Cancel</Button> {' '}\n                </Grid>\n                </Grid>\n      </CardContent>\n      </form>\n    </Card>\n    </div>\n  )\n}\n\nexport default UsersManagement"]},"metadata":{},"sourceType":"module"}