{"ast":null,"code":"var _jsxFileName = \"/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/UsersManagement.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { doEditMember } from '../redux/MembersActions';\nimport Grid from \"@mui/material/Grid\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst usersUrl = 'http://localhost:8000/users';\n\nconst UsersManagement = _ref => {\n  _s();\n\n  let {\n    username\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const users = useSelector(state => state.UsersReducer.users);\n  const user = users.find(user => user.username === username);\n  const [editUser, setEditUser] = useState(user);\n  const [editUserErrors, setEditUserErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmit(true);\n    setEditUserErrors(validate(editUser));\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (Object.keys(setEditUserErrors).length === 0 && isSubmit) {\n        const {\n          data\n        } = await axios.put(`${usersUrl}/${user._id}`, editUser);\n        console.log(data);\n        setEditUser(editUser);\n        dispatch(doEditMember(editUser));\n        navigate('/mainpage');\n      }\n    })();\n  }, [editUserErrors]);\n\n  const cancel = () => {\n    navigate('/mainpage');\n  };\n\n  const validate = values => {\n    const errors = {};\n    const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!values.name) {\n      errors.name = \"Name is required!\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n\n    if (!values.city) {\n      errors.city = \"City is required!\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '20px',\n      marginLeft: '10px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: '50%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: 17\n            },\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: [\"Edit Member: \", member.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-textarea\",\n                label: \"Name:\",\n                value: editMember.name,\n                multiline: true,\n                name: \"name\",\n                onChange: e => setEditMember({ ...editMember,\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                color: 'red'\n              },\n              children: editMembersErrors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-textarea\",\n                label: \"Email:\",\n                value: editMember.email,\n                multiline: true,\n                name: \"email\",\n                onChange: e => setEditMember({ ...editMember,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                color: 'red'\n              },\n              children: editMembersErrors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-textarea\",\n                label: \"City:\",\n                value: editMember.city,\n                multiline: true,\n                name: \"city\",\n                onChange: e => setEditMember({ ...editMember,\n                  city: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                color: 'red'\n              },\n              children: editMembersErrors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: cancel,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), \" \", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UsersManagement, \"uFKvRfJjrKRUmnqPY4t0kc0BlYM=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = UsersManagement;\nexport default UsersManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersManagement\");","map":{"version":3,"sources":["/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/UsersManagement.js"],"names":["axios","useState","useEffect","useNavigate","useSelector","useDispatch","doEditMember","Grid","Card","CardContent","Button","Typography","TextField","usersUrl","UsersManagement","username","dispatch","navigate","users","state","UsersReducer","user","find","editUser","setEditUser","editUserErrors","setEditUserErrors","isSubmit","setIsSubmit","handleSubmit","e","preventDefault","validate","Object","keys","length","data","put","_id","console","log","cancel","values","errors","regex","name","email","test","city","marginTop","marginLeft","width","fontSize","member","editMember","setEditMember","target","value","color","editMembersErrors"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,QAAQ,GAAG,6BAAjB;;AAEA,MAAMC,eAAe,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACpC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,KAAK,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,YAAN,CAAmBF,KAA7B,CAAzB;AACA,QAAMG,IAAI,GAAGH,KAAK,CAACI,IAAN,CAAYD,IAAD,IAASA,IAAI,CAACN,QAAL,KAAkBA,QAAtC,CAAb;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAACoB,IAAD,CAAxC;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAM4B,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,IAAAA,iBAAiB,CAACM,QAAQ,CAACT,QAAD,CAAT,CAAjB;AACD,GAJD;;AAMArB,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AAAC,UAAG+B,MAAM,CAACC,IAAP,CAAYR,iBAAZ,EAA+BS,MAA/B,KAA0C,CAA1C,IAA+CR,QAAlD,EAA2D;AACvE,cAAM;AAAES,UAAAA;AAAF,YAAW,MAAMpC,KAAK,CAACqC,GAAN,CAAW,GAAExB,QAAS,IAAGQ,IAAI,CAACiB,GAAI,EAAlC,EAAqCf,QAArC,CAAvB;AACAgB,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAZ,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAP,QAAAA,QAAQ,CAACV,YAAY,CAACiB,QAAD,CAAb,CAAR;AACAN,QAAAA,QAAQ,CAAC,WAAD,CAAR;AACD;AAAC,KANF;AAOD,GARQ,EAQN,CAACQ,cAAD,CARM,CAAT;;AAWA,QAAMgB,MAAM,GAAG,MAAM;AACnBxB,IAAAA,QAAQ,CAAC,WAAD,CAAR;AACH,GAFC;;AAIA,QAAMe,QAAQ,GAAIU,MAAD,IAAY;AAC3B,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,KAAK,GAAG,+CAAd;;AACA,QAAG,CAACF,MAAM,CAACG,IAAX,EAAiB;AACbF,MAAAA,MAAM,CAACE,IAAP,GAAc,mBAAd;AACH;;AACD,QAAG,CAACH,MAAM,CAACI,KAAX,EAAkB;AACdH,MAAAA,MAAM,CAACG,KAAP,GAAe,oBAAf;AACH,KAFD,MAEM,IAAG,CAACF,KAAK,CAACG,IAAN,CAAWL,MAAM,CAACI,KAAlB,CAAJ,EAA6B;AACjCH,MAAAA,MAAM,CAACG,KAAP,GAAe,mCAAf;AACD;;AACD,QAAG,CAACJ,MAAM,CAACM,IAAX,EAAiB;AACbL,MAAAA,MAAM,CAACK,IAAP,GAAc,mBAAd;AACH;;AACD,WAAOL,MAAP;AACD,GAfD;;AAiBF,sBACE;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,SAAS,EAAE,MAAZ;AAAoBC,MAAAA,UAAU,EAAE;AAAhC,KAAZ;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA,6BACA;AAAM,QAAA,QAAQ,EAAEtB,YAAhB;AAAA,+BACA,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAE;AAAEuB,cAAAA,QAAQ,EAAE;AAAZ,aAAhB;AAAkC,YAAA,KAAK,EAAC,gBAAxC;AAAyD,YAAA,YAAY,MAArE;AAAA,wCACkBC,MAAM,CAACR,IADzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,SAAS,EAAE,QAA3B;AAAqC,YAAA,OAAO,EAAE,CAA9C;AAAA,oCACA,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACU,QAAC,SAAD;AACE,gBAAA,EAAE,EAAC,mBADL;AAEE,gBAAA,KAAK,EAAC,OAFR;AAGE,gBAAA,KAAK,EAAES,UAAU,CAACT,IAHpB;AAIE,gBAAA,SAAS,MAJX;AAKE,gBAAA,IAAI,EAAC,MALP;AAME,gBAAA,QAAQ,EAAGf,CAAD,IACTyB,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBT,kBAAAA,IAAI,EAAEf,CAAC,CAAC0B,MAAF,CAASC;AAAhC,iBAAD;AAPhB;AAAA;AAAA;AAAA;AAAA;AADV;AAAA;AAAA;AAAA;AAAA,oBADA,eAaQ,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAE;AAAR,eAAlB;AAAA,wBACKC,iBAAiB,CAACd;AADvB;AAAA;AAAA;AAAA;AAAA,oBAbR,eAgBQ,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,EAAE,EAAC,mBADL;AAEE,gBAAA,KAAK,EAAC,QAFR;AAGE,gBAAA,KAAK,EAAES,UAAU,CAACR,KAHpB;AAIE,gBAAA,SAAS,MAJX;AAKE,gBAAA,IAAI,EAAC,OALP;AAME,gBAAA,QAAQ,EAAGhB,CAAD,IACNyB,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBR,kBAAAA,KAAK,EAAEhB,CAAC,CAAC0B,MAAF,CAASC;AAAjC,iBAAD;AAPnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhBR,eA4BQ,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAE;AAAR,eAAlB;AAAA,wBACKC,iBAAiB,CAACb;AADvB;AAAA;AAAA;AAAA;AAAA,oBA5BR,eA+BQ,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,SAAD;AACE,gBAAA,EAAE,EAAC,mBADL;AAEE,gBAAA,KAAK,EAAC,OAFR;AAGE,gBAAA,KAAK,EAAEQ,UAAU,CAACN,IAHpB;AAIE,gBAAA,SAAS,MAJX;AAKE,gBAAA,IAAI,EAAC,MALP;AAME,gBAAA,QAAQ,EAAGlB,CAAD,IACVyB,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBN,kBAAAA,IAAI,EAAElB,CAAC,CAAC0B,MAAF,CAASC;AAAhC,iBAAD;AAPf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA/BR,eA2CQ,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAE;AAAR,eAAlB;AAAA,wBACKC,iBAAiB,CAACX;AADvB;AAAA;AAAA;AAAA;AAAA,oBA3CR,eA8CQ,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,sCACE,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,OAAO,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGY,GAHZ,eAIE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,OAAO,EAAEP,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,OAIgE,GAJhE;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9CR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAkED,CAjHD;;GAAM3B,e;UACeT,W,EACAF,W,EACHC,W;;;KAHZU,e;AAmHN,eAAeA,eAAf","sourcesContent":["import axios from 'axios'\nimport { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { doEditMember } from '../redux/MembersActions';\n\nimport Grid from \"@mui/material/Grid\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from \"@mui/material/TextField\";\n\nconst usersUrl = 'http://localhost:8000/users';\n\nconst UsersManagement = ({username}) => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate();\n    const users = useSelector(state => state.UsersReducer.users);\n    const user = users.find((user)=> user.username === username)\n    const [editUser, setEditUser] = useState(user)\n    const [editUserErrors, setEditUserErrors] = useState({})\n    const [isSubmit, setIsSubmit] = useState(false)\n  \n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      setIsSubmit(true);\n      setEditUserErrors(validate(editUser));\n    };\n  \n    useEffect(() => {\n      (async () => {if(Object.keys(setEditUserErrors).length === 0 && isSubmit){\n        const { data } = await axios.put(`${usersUrl}/${user._id}`, editUser);\n        console.log(data)\n        setEditUser(editUser);\n        dispatch(doEditMember(editUser));\n        navigate('/mainpage')\n      }})()\n    }, [editUserErrors])\n    \n  \n    const cancel = () => {\n      navigate('/mainpage')\n  }\n  \n    const validate = (values) => {\n      const errors = {}\n      const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if(!values.name) {\n          errors.name = \"Name is required!\";\n      }\n      if(!values.email) {\n          errors.email = \"Email is required!\";\n      }else if(!regex.test(values.email)){\n        errors.email = \"This is not a valid email format!\"\n      }\n      if(!values.city) {\n          errors.city = \"City is required!\";\n      }\n      return errors;\n    }\n\n  return (\n    <div style={{marginTop: '20px', marginLeft: '10px'}}>\n    <Card sx={{ width: '50%' }}>\n    <form onSubmit={handleSubmit}>\n    <CardContent>\n      <Typography sx={{ fontSize: 17 }} color=\"text.secondary\" gutterBottom>\n          Edit Member: {member.name} \n      </Typography>   \n      <Grid container direction={\"column\"} spacing={3}>\n      <Grid item>\n                <TextField\n                  id=\"outlined-textarea\"\n                  label=\"Name:\"\n                  value={editMember.name}\n                  multiline\n                  name=\"name\"\n                  onChange={(e) =>\n                   setEditMember({ ...editMember, name: e.target.value })\n                  }\n                />\n              </Grid>\n              <Grid item style={{color: 'red'}}>\n                  {editMembersErrors.name}\n              </Grid>\n              <Grid item>\n                <TextField\n                  id=\"outlined-textarea\"\n                  label=\"Email:\"\n                  value={editMember.email}\n                  multiline\n                  name=\"email\"\n                  onChange={(e) =>\n                      setEditMember({ ...editMember, email: e.target.value })\n                  }\n                  />\n              </Grid>\n              <Grid item style={{color: 'red'}}>\n                  {editMembersErrors.email}\n              </Grid>\n              <Grid item>\n                <TextField\n                  id=\"outlined-textarea\"\n                  label=\"City:\"\n                  value={editMember.city}\n                  multiline\n                  name=\"city\"\n                  onChange={(e) =>\n                  setEditMember({ ...editMember, city: e.target.value })\n                  }\n                  />\n              </Grid>\n              <Grid item style={{color: 'red'}}>\n                  {editMembersErrors.city}\n              </Grid>\n              <Grid item>\n                <Button type=\"submit\" variant=\"contained\">\n                  Update\n                </Button>{\" \"}\n                <Button variant=\"contained\" onClick={cancel}>Cancel</Button> {' '}\n              </Grid>\n              </Grid>\n    </CardContent>\n    </form>\n  </Card>\n  </div>\n  )\n}\n\nexport default UsersManagement"]},"metadata":{},"sourceType":"module"}