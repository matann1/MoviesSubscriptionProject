{"ast":null,"code":"const initialUsersState = {\n  users: []\n};\nconst initialMoviesState = {\n  movies: []\n};\n\nconst applyUsersChange = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialUsersState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOAD':\n      return { ...state,\n        users: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst applyMoviesChange = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialMoviesState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOAD':\n      return { ...state,\n        movies: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nmodule.exports = {\n  applyMoviesChange,\n  applyUsersChange\n};","map":{"version":3,"sources":["/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/redux/reducers.js"],"names":["initialUsersState","users","initialMoviesState","movies","applyUsersChange","state","action","type","payload","applyMoviesChange","module","exports"],"mappings":"AACA,MAAMA,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE;AADe,CAA1B;AAKE,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,MAAM,EAAE;AADiB,CAA3B;;AAKA,MAAMC,gBAAgB,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9BL,iBAA8B;AAAA,MAAXM,MAAW;;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAA1B,OAAP;;AAEF;AACE,aAAOH,KAAP;AALJ;AAOD,CARD;;AAUA,MAAMI,iBAAiB,GAAG,YAAwC;AAAA,MAAvCJ,KAAuC,uEAA/BH,kBAA+B;AAAA,MAAXI,MAAW;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYF,QAAAA,MAAM,EAAEG,MAAM,CAACE;AAA3B,OAAP;;AAEF;AACE,aAAOH,KAAP;AALJ;AAOD,CARD;;AAYDK,MAAM,CAACC,OAAP,GAAiB;AAACF,EAAAA,iBAAD;AAAoBL,EAAAA;AAApB,CAAjB","sourcesContent":["\nconst initialUsersState = {\n    users: []\n    \n  };\n\n  const initialMoviesState = {\n    movies: []\n    \n  };\n  \n  const applyUsersChange = (state = initialUsersState, action) => {\n    switch (action.type) {\n      case 'LOAD':\n        return { ...state, users: action.payload };\n  \n      default:\n        return state;\n    }\n  };\n\n  const applyMoviesChange = (state = initialMoviesState, action) => {\n    switch (action.type) {\n      case 'LOAD':\n        return { ...state, movies: action.payload };\n  \n      default:\n        return state;\n    }\n  };\n\n\n  \n module.exports = {applyMoviesChange, applyUsersChange } ;\n "]},"metadata":{},"sourceType":"module"}