{"ast":null,"code":"var _jsxFileName = \"/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/MoviesComp.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { doLoadMovies } from '../redux/MoviesActions';\nimport { ToggleButtonGroup, ToggleButton } from \"@mui/material\";\nimport MovieComp from './MovieComp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:8000/movies';\n\nconst MoviesComp = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [currentAlignment, setCurrentAlignment] = useState(\"allmovies\");\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data: movies\n      } = await axios.get(url);\n      console.log(movies);\n      setMovies(movies);\n      dispatch(doLoadMovies(movies));\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), \"const [currentAlignment, setCurrentAlignment] = useState(\\\"movies\\\");\", /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      value: currentAlignment,\n      onChange: (event, newAlignment) => {\n        setCurrentAlignment(newAlignment);\n      },\n      exclusive: true,\n      variant: \"contained\",\n      \"aria-label\": \"text formatting\",\n      color: \"primary\",\n      children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"allmovies\",\n        children: \"All Movies \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"addmovie\",\n        children: \"Add movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"All Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), \" \", ' ', \"Find Movie: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 38\n    }, this), movies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(MovieComp, {\n        movie: movie\n      }, movie._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 20\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoviesComp, \"onF0yXtBnL+krohXTcEPENUWBco=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MoviesComp;\nexport default MoviesComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesComp\");","map":{"version":3,"sources":["/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/MoviesComp.js"],"names":["useEffect","useState","useDispatch","axios","doLoadMovies","ToggleButtonGroup","ToggleButton","MovieComp","url","MoviesComp","dispatch","currentAlignment","setCurrentAlignment","movies","setMovies","fetchData","data","get","console","log","event","newAlignment","map","movie","_id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,eAAhD;AAGA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,GAAG,GAAG,8BAAZ;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,WAAD,CAAxD;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,SAAS,GAAG,YAAY;AAC5B,YAAM;AAAEC,QAAAA,IAAI,EAAEH;AAAR,UAAmB,MAAMV,KAAK,CAACc,GAAN,CAAUT,GAAV,CAA/B;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACAC,MAAAA,SAAS,CAACD,MAAD,CAAT;AACAH,MAAAA,QAAQ,CAACN,YAAY,CAACS,MAAD,CAAb,CAAR;AACD,KALD;;AAMAE,IAAAA,SAAS;AACV,GARQ,EAQN,EARM,CAAT;AAUF,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,wFAKA,QAAC,iBAAD;AACE,MAAA,KAAK,EAAEJ,gBADT;AAEE,MAAA,QAAQ,EAAE,CAACS,KAAD,EAAQC,YAAR,KAAyB;AACjCT,QAAAA,mBAAmB,CAACS,YAAD,CAAnB;AAED,OALH;AAME,MAAA,SAAS,MANX;AAOE,MAAA,OAAO,EAAC,WAPV;AAQE,oBAAW,iBARb;AASE,MAAA,KAAK,EAAC,SATR;AAAA,8BAYE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ,OAqBiC,GArBjC,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,OAsBgC,GAtBhC,+BAuBgB;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAvBhB,OAuBuC,GAvBvC,eAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBJ,oBAwB0B;AAAA;AAAA;AAAA;AAAA,YAxB1B,oBAwBiC;AAAA;AAAA;AAAA;AAAA,YAxBjC,EAyBKR,MAAM,CAACS,GAAP,CAAYC,KAAD,IAAU;AAClB,0BAAO,QAAC,SAAD;AAA2B,QAAA,KAAK,EAAEA;AAAlC,SAAgBA,KAAK,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA,CAzBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA9CD;;GAAMf,U;UACeP,W;;;KADfO,U;AAgDN,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios'\nimport { doLoadMovies } from '../redux/MoviesActions';\nimport { ToggleButtonGroup, ToggleButton } from \"@mui/material\";\n\n\nimport MovieComp from './MovieComp'\n\nconst url = 'http://localhost:8000/movies';\n\nconst MoviesComp = () => {\n    const dispatch = useDispatch()\n    const [currentAlignment, setCurrentAlignment] = useState(\"allmovies\");\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n      const fetchData = async () => {\n        const { data: movies } = await axios.get(url);\n        console.log(movies);\n        setMovies(movies);\n        dispatch(doLoadMovies(movies));\n      }\n      fetchData()\n    }, [])\n    \n  return (\n    <div>\n        <h2>Movies</h2>\n        <br />\n        const [currentAlignment, setCurrentAlignment] = useState(\"movies\");\n\n    <ToggleButtonGroup\n      value={currentAlignment}\n      onChange={(event, newAlignment) => {\n        setCurrentAlignment(newAlignment);\n        \n      }} \n      exclusive\n      variant=\"contained\"\n      aria-label=\"text formatting\"\n      color=\"primary\"\n      \n    >\n      <ToggleButton value=\"allmovies\">All Movies </ToggleButton>\n      <ToggleButton value=\"addmovie\">Add movie</ToggleButton>\n      \n    </ToggleButtonGroup>\n        <button>All Movies</button> {' '}\n        <button>Add Movie</button> {' '}\n        Find Movie: <input type=\"text\" /> {' '}\n        <button>Find</button> <br /> <br />\n        {movies.map((movie)=> {\n            return <MovieComp key={movie._id} movie={movie}/>\n        })}\n    </div>\n  )\n}\n\nexport default MoviesComp"]},"metadata":{},"sourceType":"module"}