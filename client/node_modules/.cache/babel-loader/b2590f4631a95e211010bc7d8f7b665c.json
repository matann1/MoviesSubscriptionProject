{"ast":null,"code":"var _jsxFileName = \"/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/EditMovieComp.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { doEditMovie } from '../redux/MoviesActions';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moviesUrl = 'http://localhost:8000/movies';\n\nconst EditMovieComp = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    username,\n    movieid\n  } = useParams();\n  const movies = useSelector(state => state.MoviesReducer.movies);\n  const movie = movies.find(movie => movie._id === movieid);\n  const [movieEdit, setMovieEdit] = useState(movie);\n  console.log(movieEdit.premiered);\n\n  const update = async () => {\n    console.log(movieEdit.premiered);\n    const {\n      data\n    } = await axios.put(`${moviesUrl}/${movie._id}`, movieEdit);\n    dispatch(doEditMovie(movieEdit));\n    console.log(data);\n    console.log(movieEdit);\n    navigate(`/${username}/MainPage`);\n  };\n\n  const cancel = () => {\n    navigate(`/${username}/MainPage`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: '50%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: 17\n          },\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: [\"Edit Movie: \", movie.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h7\",\n          component: \"div\",\n          children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: movieEdit.name,\n            name: \"name\",\n            onChange: e => setMovieEdit({ ...movieEdit,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 143\n          }, this), \"Genres: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: movieEdit.genres,\n            name: \"genres\",\n            onChange: e => setMovieEdit({ ...movieEdit,\n              genres: e.target.value.split(',')\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 161\n          }, this), \"Image URL: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: movieEdit.image,\n            name: \"image\",\n            onChange: e => setMovieEdit({ ...movieEdit,\n              image: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 20\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 150\n          }, this), \"Premired: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: movieEdit.yearPremiered,\n            name: \"premiered\",\n            onChange: e => setMovieEdit({ ...movieEdit,\n              premiered: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 165\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: update,\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: cancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), \" \", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditMovieComp, \"R1FUzXRCRv2x2+Gf0z9FWF1fgUA=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector];\n});\n\n_c = EditMovieComp;\nexport default EditMovieComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovieComp\");","map":{"version":3,"sources":["/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/EditMovieComp.js"],"names":["axios","useState","useParams","useNavigate","useSelector","useDispatch","doEditMovie","Card","CardActions","CardContent","Button","Typography","moviesUrl","EditMovieComp","dispatch","navigate","username","movieid","movies","state","MoviesReducer","movie","find","_id","movieEdit","setMovieEdit","console","log","premiered","update","data","put","cancel","width","fontSize","name","e","target","value","genres","split","image","yearPremiered"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,SAAS,GAAG,8BAAlB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAAEa,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAwBf,SAAS,EAAvC;AACA,QAAMgB,MAAM,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,aAAN,CAAoBF,MAA9B,CAA1B;AACA,QAAMG,KAAK,GAAGH,MAAM,CAACI,IAAP,CAAaD,KAAD,IAAUA,KAAK,CAACE,GAAN,KAAcN,OAApC,CAAd;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAACoB,KAAD,CAA1C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,SAAtB;;AAEA,QAAMC,MAAM,GAAG,YAAY;AACvBH,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,SAAtB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAM9B,KAAK,CAAC+B,GAAN,CAAW,GAAEnB,SAAU,IAAGS,KAAK,CAACE,GAAI,EAApC,EAAuCC,SAAvC,CAAvB;AACAV,IAAAA,QAAQ,CAACR,WAAW,CAACkB,SAAD,CAAZ,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAT,IAAAA,QAAQ,CAAE,IAAGC,QAAS,WAAd,CAAR;AACH,GAPD;;AASA,QAAMgB,MAAM,GAAG,MAAM;AACjBjB,IAAAA,QAAQ,CAAE,IAAGC,QAAS,WAAd,CAAR;AACH,GAFD;;AAIF,sBACE;AAAA,2BAEJ,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEiB,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA,8BACM,QAAC,WAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAAhB;AAAkC,UAAA,KAAK,EAAC,gBAAxC;AAAyD,UAAA,YAAY,MAArE;AAAA,qCACiBb,KAAK,CAACc,IADvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,KAAnC;AAAA,4CACM;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEX,SAAS,CAACW,IAApC;AAA2C,YAAA,IAAI,EAAC,MAAhD;AAAuD,YAAA,QAAQ,EAAGC,CAAD,IAAOX,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBW,cAAAA,IAAI,EAAEC,CAAC,CAACC,MAAF,CAASC;AAA/B,aAAD;AAApF;AAAA;AAAA;AAAA;AAAA,kBADN,oBACsI;AAAA;AAAA;AAAA;AAAA,kBADtI,2BAEQ;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEd,SAAS,CAACe,MAApC;AAA4C,YAAA,IAAI,EAAC,QAAjD;AAA0D,YAAA,QAAQ,EAAGH,CAAD,IAAOX,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBe,cAAAA,MAAM,EAAEH,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeE,KAAf,CAAqB,GAArB;AAAxB,aAAD;AAAvF;AAAA;AAAA;AAAA;AAAA,kBAFR,oBAEwJ;AAAA;AAAA;AAAA;AAAA,kBAFxJ,8BAGW;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEhB,SAAS,CAACiB,KAApC;AAA2C,YAAA,IAAI,EAAC,OAAhD;AAAwD,YAAA,QAAQ,EAAGL,CAAD,IAAOX,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBiB,cAAAA,KAAK,EAAEL,CAAC,CAACC,MAAF,CAASC;AAAhC,aAAD;AAArF;AAAA;AAAA;AAAA;AAAA,kBAHX,oBAG6I;AAAA;AAAA;AAAA;AAAA,kBAH7I,6BAIU;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEd,SAAS,CAACkB,aAApC;AAAmD,YAAA,IAAI,EAAC,WAAxD;AAAoE,YAAA,QAAQ,EAAGN,CAAD,IAAOX,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBI,cAAAA,SAAS,EAAEQ,CAAC,CAACC,MAAF,CAASC;AAApC,aAAD;AAAjG;AAAA;AAAA;AAAA;AAAA,kBAJV,oBAI4J;AAAA;AAAA;AAAA;AAAA,kBAJ5J;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,eAYM,QAAC,WAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAET,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACgE,GADhE,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEG,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,OAEgE,GAFhE;AAAA;AAAA;AAAA;AAAA;AAAA,cAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAFI;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA5CD;;GAAMnB,a;UACeR,W,EACAF,W,EACaD,S,EACfE,W;;;KAJbS,a;AA8CN,eAAeA,aAAf","sourcesContent":["import axios from 'axios'\nimport { useState } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { doEditMovie } from '../redux/MoviesActions';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nconst moviesUrl = 'http://localhost:8000/movies';\n\nconst EditMovieComp = () => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate();\n    const { username, movieid } = useParams();\n    const movies = useSelector(state => state.MoviesReducer.movies);\n    const movie = movies.find((movie)=> movie._id === movieid)\n    const [movieEdit, setMovieEdit] = useState(movie)\n    console.log(movieEdit.premiered)\n\n    const update = async () => {\n        console.log(movieEdit.premiered)\n        const { data } = await axios.put(`${moviesUrl}/${movie._id}`, movieEdit);\n        dispatch(doEditMovie(movieEdit));\n        console.log(data);\n        console.log(movieEdit);\n        navigate(`/${username}/MainPage`)\n    }\n\n    const cancel = () => {\n        navigate(`/${username}/MainPage`)\n    }\n\n  return (\n    <div>\n \n<Card sx={{ width: '50%' }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 17 }} color=\"text.secondary\" gutterBottom>\n            Edit Movie: {movie.name} \n        </Typography>   \n        <Typography variant=\"h7\" component=\"div\">\n        Name: <input type=\"text\" value={movieEdit.name}  name=\"name\" onChange={(e) => setMovieEdit({ ...movieEdit, name: e.target.value })}/> <br />\n        Genres: <input type=\"text\" value={movieEdit.genres} name=\"genres\" onChange={(e) => setMovieEdit({ ...movieEdit, genres: e.target.value.split(',') })}/> <br />\n        Image URL: <input type=\"text\" value={movieEdit.image} name=\"image\" onChange={(e) => setMovieEdit({ ...movieEdit, image: e.target.value })}/> <br />\n        Premired: <input type=\"date\" value={movieEdit.yearPremiered} name=\"premiered\" onChange={(e) => setMovieEdit({ ...movieEdit, premiered: e.target.value })}/> <br />\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button variant=\"contained\" onClick={update}>update</Button> {' '}\n        <Button variant=\"contained\" onClick={cancel}>Cancel</Button> {' '}\n      </CardActions>\n    </Card>\n    </div>\n  )\n}\n\nexport default EditMovieComp"]},"metadata":{},"sourceType":"module"}