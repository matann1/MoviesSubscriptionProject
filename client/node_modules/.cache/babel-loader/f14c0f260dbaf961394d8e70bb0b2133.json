{"ast":null,"code":"var _jsxFileName = \"/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/AddMovieComp.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { doEditMovie } from \"../redux/MoviesActions\";\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moviesUrl = \"http://localhost:8000/movies\";\n\nconst AddMovieComp = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [movieToAdd, setMovieToAdd] = useState({});\n  const initialValues = {\n    name: \"\",\n    genres: \"\",\n    image: \"\",\n    yearPremiered: Date\n  };\n  const [movieToAddErrors, setMovieToAddErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // if (\n    //   movieToAdd.name &&\n    //   movieToAdd.genres &&\n    //   movieToAdd.image &&\n    //   movieToAdd.premiered\n    // ) {\n    //   console.log(movieToAdd.toDate());\n    //   const { data } = await axios.post(`${moviesUrl}`, movieToAdd);\n    //   setMovieToAdd(movieToAdd);\n    //   dispatch(doEditMovie(movieToAdd));\n    //   console.log(data);\n    //   console.log(movieToAdd);\n    // }\n    // navigate(`/${username}/MainPage`)\n\n    setMovieToAddErrors(validate(movieToAdd));\n    setIsSubmit(true);\n  };\n\n  useEffect(() => {\n    console.log(movieToAddErrors);\n\n    if (Object.keys(movieToAddErrors).length === 0 && isSubmit) {\n      console.log(movieToAdd);\n    }\n  }, [movieToAddErrors]);\n\n  const validate = values => {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = \"Name is required!\";\n    }\n\n    if (!values.genres) {\n      errors.genres = \"Genres is required!\";\n    }\n\n    if (!values.image) {\n      errors.image = \"Image is required!\";\n    }\n\n    if (!values.yearPremiered) {\n      errors.yearPremiered = \"Premiered is required!\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: \"75%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h7\",\n            component: \"div\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-textarea\",\n                  label: \"Name:\",\n                  placeholder: \"\",\n                  multiline: true,\n                  name: \"name\",\n                  onChange: e => setMovieToAdd({ ...movieToAdd,\n                    name: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: movieToAddErrors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-textarea\",\n                  label: \"Genres:\",\n                  placeholder: \"\",\n                  multiline: true,\n                  name: \"genres\",\n                  onChange: e => setMovieToAdd({ ...movieToAdd,\n                    genres: e.target.value.split(\",\")\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: movieToAddErrors.genres\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-textarea\",\n                  label: \"Image URL:\",\n                  placeholder: \"\",\n                  multiline: true,\n                  name: \"image\",\n                  onChange: e => setMovieToAdd({ ...movieToAdd,\n                    image: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: movieToAddErrors.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"outlined-textarea\",\n                  type: \"date\" // label=\"Premired:\"\n                  ,\n                  placeholder: \"\",\n                  name: \"yearPremiered\",\n                  onChange: e => setMovieToAdd({ ...movieToAdd,\n                    yearPremiered: e.target.value + \"T00:00:00.000Z\"\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: movieToAddErrors.yearPremiered\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"contained\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddMovieComp, \"UZueM2qADxNPFXL1tNi5iT6Mwf8=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = AddMovieComp;\nexport default AddMovieComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMovieComp\");","map":{"version":3,"sources":["/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/AddMovieComp.js"],"names":["axios","useState","useEffect","useParams","useNavigate","useSelector","useDispatch","doEditMovie","Card","Grid","CardContent","Button","Typography","TextField","moviesUrl","AddMovieComp","dispatch","navigate","movieToAdd","setMovieToAdd","initialValues","name","genres","image","yearPremiered","Date","movieToAddErrors","setMovieToAddErrors","isSubmit","setIsSubmit","handleSubmit","e","preventDefault","validate","console","log","Object","keys","length","values","errors","marginBottom","width","target","value","split"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { doEditMovie } from \"../redux/MoviesActions\";\n\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\n\nconst moviesUrl = \"http://localhost:8000/movies\";\n\nconst AddMovieComp = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [movieToAdd, setMovieToAdd] = useState({});\n  const initialValues = { name: \"\", genres: \"\", image: \"\", yearPremiered: Date };\n  const [movieToAddErrors, setMovieToAddErrors] = useState({})\n  const [isSubmit, setIsSubmit] = useState(false)\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // if (\n    //   movieToAdd.name &&\n    //   movieToAdd.genres &&\n    //   movieToAdd.image &&\n    //   movieToAdd.premiered\n    // ) {\n    //   console.log(movieToAdd.toDate());\n    //   const { data } = await axios.post(`${moviesUrl}`, movieToAdd);\n    //   setMovieToAdd(movieToAdd);\n    //   dispatch(doEditMovie(movieToAdd));\n    //   console.log(data);\n    //   console.log(movieToAdd);\n    // }\n    // navigate(`/${username}/MainPage`)\n    setMovieToAddErrors(validate(movieToAdd));\n    setIsSubmit(true);\n  };\n\n  useEffect(() => {\n      console.log(movieToAddErrors)\n    if(Object.keys(movieToAddErrors).length === 0 && isSubmit){\n        console.log(movieToAdd)\n    }\n  }, [movieToAddErrors])\n  \n\n  const validate = (values) => {\n    const errors = {}\n    if(!values.name) {\n        errors.name = \"Name is required!\";\n    }\n    if(!values.genres) {\n        errors.genres = \"Genres is required!\";\n    }\n    if(!values.image) {\n        errors.image = \"Image is required!\";\n    }\n    if(!values.yearPremiered) {\n        errors.yearPremiered = \"Premiered is required!\";\n    }\n    return errors;\n  }\n\n  return (\n    <div style={{ marginBottom: '20px' }}>\n      <Card sx={{ width: \"75%\" }}>\n        <form onSubmit={handleSubmit}>\n          <CardContent>\n            <Typography variant=\"h7\" component=\"div\">\n              <Grid container direction={\"column\"} spacing={2}>\n                <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Name:\"\n                    placeholder=\"\"\n                    multiline\n                    name=\"name\"\n                    onChange={(e) =>\n                      setMovieToAdd({ ...movieToAdd, name: e.target.value })\n                    }\n                    />\n                </Grid>\n                <Grid item>\n                    {movieToAddErrors.name}\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Genres:\"\n                    placeholder=\"\"\n                    multiline\n                    name=\"genres\"\n                    onChange={(e) =>\n                      setMovieToAdd({\n                        ...movieToAdd,\n                        genres: e.target.value.split(\",\"),\n                      })\n                    }\n                  />\n                </Grid>\n                <Grid item>\n                    {movieToAddErrors.genres}\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Image URL:\"\n                    placeholder=\"\"\n                    multiline\n                    name=\"image\"\n                    onChange={(e) =>\n                      setMovieToAdd({ ...movieToAdd, image: e.target.value })\n                    }\n                  />\n                </Grid>\n                <Grid item>\n                    {movieToAddErrors.image}\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    type='date'\n                    // label=\"Premired:\"\n                    placeholder=\"\"\n                    name=\"yearPremiered\"\n                    onChange={(e) =>\n                      setMovieToAdd({\n                        ...movieToAdd,\n                        yearPremiered: e.target.value + \"T00:00:00.000Z\",\n                      })\n                    }\n                  />\n                </Grid>\n                <Grid item>\n                    {movieToAddErrors.yearPremiered}\n                </Grid>\n                <Grid item>\n                  <Button type=\"submit\" variant=\"contained\">\n                    Save\n                  </Button>{\" \"}\n                  {/* <Button variant=\"contained\" onClick={cancel}>Cancel</Button> {' '} */}\n                </Grid>\n              </Grid>\n            </Typography>\n          </CardContent>\n        </form>\n      </Card>\n    </div>\n  );\n};\n\nexport default AddMovieComp;\n"]},"metadata":{},"sourceType":"module"}