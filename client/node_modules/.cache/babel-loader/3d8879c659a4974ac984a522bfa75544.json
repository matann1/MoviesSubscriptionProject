{"ast":null,"code":"var _jsxFileName = \"/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/AddMemberComp.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { doAddMember } from \"../redux/MembersActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst membersUrl = \"http://localhost:8000/members\";\n\nconst AddMemberComp = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [memberToAdd, setMemberToAdd] = useState({});\n  const [memberToAddErrors, setmemberToAddErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmit(true);\n    setmemberToAddErrors(validate(memberToAdd));\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (Object.keys(memberToAddErrors).length === 0 && isSubmit) {\n        try {\n          const {\n            data\n          } = await axios.post(`${membersUrl}`, memberToAdd);\n          console.log(data);\n          setMemberToAdd(memberToAdd);\n          dispatch(doAddMember(memberToAdd));\n          navigate('/mainpage/sub');\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    })();\n  }, [memberToAddErrors]);\n\n  const cancel = () => {\n    navigate('/mainpage/', {\n      state: {\n        currentAlignment: 'allmembers'\n      }\n    });\n  };\n\n  const validate = values => {\n    const errors = {};\n    const regex = /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!values.name) {\n      errors.name = \"Name is required!\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n\n    if (!values.city) {\n      errors.city = \"City is required!\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: '50%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: 17\n            },\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: \"Add New Member\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-textarea\",\n                label: \"Name:\",\n                name: \"name\",\n                onChange: e => setMemberToAdd({ ...memberToAdd,\n                  name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                color: 'red'\n              },\n              children: memberToAddErrors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-textarea\",\n                label: \"Email:\",\n                name: \"email\",\n                onChange: e => setMemberToAdd({ ...memberToAdd,\n                  email: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                color: 'red'\n              },\n              children: memberToAddErrors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-textarea\",\n                label: \"City:\",\n                name: \"city\",\n                onChange: e => setMemberToAdd({ ...memberToAdd,\n                  city: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                color: 'red'\n              },\n              children: memberToAddErrors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"ADD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: cancel,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), \" \", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddMemberComp, \"42rxvis5efV/PGAiEgLtz24XH7A=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = AddMemberComp;\nexport default AddMemberComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMemberComp\");","map":{"version":3,"sources":["/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/AddMemberComp.js"],"names":["axios","Card","Grid","CardContent","Button","Typography","TextField","useState","useEffect","useNavigate","useDispatch","doAddMember","membersUrl","AddMemberComp","dispatch","navigate","memberToAdd","setMemberToAdd","memberToAddErrors","setmemberToAddErrors","isSubmit","setIsSubmit","handleSubmit","e","preventDefault","validate","Object","keys","length","data","post","console","log","err","cancel","state","currentAlignment","values","errors","regex","name","email","test","city","padding","width","fontSize","target","value","color"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Card from \"@mui/material/Card\";\nimport Grid from \"@mui/material/Grid\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { doAddMember } from \"../redux/MembersActions\";\n\nconst membersUrl = \"http://localhost:8000/members\";\n\nconst AddMemberComp = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n   \n    const [memberToAdd, setMemberToAdd] = useState({})\n    const [memberToAddErrors, setmemberToAddErrors] = useState({})\n    const [isSubmit, setIsSubmit] = useState(false)\n  \n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      setIsSubmit(true);\n      setmemberToAddErrors(validate(memberToAdd));\n    };\n  \n    useEffect(() => {\n      (async () => {if(Object.keys(memberToAddErrors).length === 0 && isSubmit){\n          try{\n        const { data } = await axios.post(`${membersUrl}`, memberToAdd);\n        console.log(data)\n        setMemberToAdd(memberToAdd);\n        dispatch(doAddMember(memberToAdd));\n        navigate('/mainpage/sub')\n    }\n    catch(err){\n        console.log(err)\n    }\n      }})()\n    }, [memberToAddErrors])\n    \n    const cancel = () => {\n        navigate('/mainpage/',{state:{currentAlignment: 'allmembers'}})\n  }\n  \n  const validate = (values) => {\n    const errors = {}\n    const regex = /^\\w+([\\\\.-]?\\w+)*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if(!values.name) {\n        errors.name = \"Name is required!\";\n    }\n    if(!values.email) {\n        errors.email = \"Email is required!\";\n    }else if(!regex.test(values.email)){\n      errors.email = \"This is not a valid email format!\"\n    }\n    if(!values.city) {\n        errors.city = \"City is required!\";\n    }\n    return errors;\n  }\n\n  return (\n    <div style={{padding: '20px'}}>\n      <Card sx={{ width: '50%' }}>\n      <form onSubmit={handleSubmit}>\n      <CardContent>\n        <Typography sx={{ fontSize: 17 }} color=\"text.secondary\" gutterBottom>\n            Add New Member\n        </Typography>   \n        <Grid container direction={\"column\"} spacing={3}>\n        <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Name:\"\n                    name=\"name\"\n                    onChange={(e) =>\n                     setMemberToAdd({ ...memberToAdd, name: e.target.value })\n                    }\n                  />\n                </Grid>\n                <Grid item style={{color: 'red'}}>\n                    {memberToAddErrors.name}\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Email:\"\n                    name=\"email\"\n                    onChange={(e) =>\n                        setMemberToAdd({ ...memberToAdd, email: e.target.value })\n                    }\n                    />\n                </Grid>\n                <Grid item style={{color: 'red'}}>\n                    {memberToAddErrors.email}\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"City:\"\n                    name=\"city\"\n                    onChange={(e) =>\n                        setMemberToAdd({ ...memberToAdd, city: e.target.value })\n                    }\n                    />\n                </Grid>\n                <Grid item style={{color: 'red'}}>\n                    {memberToAddErrors.city}\n                </Grid>\n                <Grid item>\n                  <Button type=\"submit\" variant=\"contained\">\n                    ADD\n                  </Button>{\" \"}\n                  <Button variant=\"contained\" onClick={cancel}>Cancel</Button> {' '}\n                </Grid>\n                </Grid>\n      </CardContent>\n      </form>\n    </Card>\n    </div>\n  )\n}\n\nexport default AddMemberComp"]},"metadata":{},"sourceType":"module"}