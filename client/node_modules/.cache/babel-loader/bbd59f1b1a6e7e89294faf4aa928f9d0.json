{"ast":null,"code":"var _jsxFileName = \"/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/EditMovieComp.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { doEditMovie } from '../redux/MoviesActions';\nimport Grid from \"@mui/material/Grid\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from \"@mui/material/TextField\"; // import DatePicker from \"react-datepicker\";\n\nimport { DatePicker } from \"@/mui/material/pickers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst moviesUrl = 'http://localhost:8000/movies';\n\nconst EditMovieComp = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    username,\n    movieid\n  } = useParams();\n  const movies = useSelector(state => state.MoviesReducer.movies);\n  const movie = movies.find(movie => movie._id === movieid);\n  const [movieEdit, setMovieEdit] = useState(movie);\n  const [startDate, setStartDate] = useState(new Date());\n  console.log(movieEdit.yearPremiered);\n\n  const update = async () => {\n    console.log(movieEdit.premiered);\n    const {\n      data\n    } = await axios.put(`${moviesUrl}/${movie._id}`, movieEdit);\n    dispatch(doEditMovie(movieEdit));\n    console.log(data);\n    console.log(movieEdit);\n    navigate(`/${username}/MainPage`);\n  };\n\n  const cancel = () => {\n    navigate(`/${username}/MainPage`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: '50%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: 17\n          },\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: [\"Edit Movie: \", movie.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-textarea\",\n            label: \"Name:\",\n            value: movieEdit.name,\n            multiline: true,\n            name: \"name\",\n            onChange: e => setMovieEdit({ ...movieEdit,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-textarea\",\n            label: \"Genres:\",\n            value: movieEdit.genres,\n            multiline: true,\n            name: \"genres\",\n            onChange: e => setMovieEdit({ ...movieEdit,\n              genres: e.target.value.split(',')\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-textarea\",\n            label: \"Image URL:\",\n            value: movieEdit.image,\n            multiline: true,\n            name: \"image\",\n            onChange: e => setMovieEdit({ ...movieEdit,\n              image: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-textarea\",\n            label: \"Premired:\",\n            type: \"date\",\n            value: movieEdit.yearPremiered.split('T')[0],\n            InputLabelProps: {\n              shrink: true,\n              required: true\n            },\n            multiline: true,\n            name: \"image\",\n            onChange: e => setMovieEdit({ ...movieEdit,\n              yearPremiered: e.target.value + \"T00:00:00.000Z\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          disableFuture: true,\n          label: \"Responsive\",\n          openTo: \"year\",\n          views: ['year', 'month', 'day'],\n          value: movieEdit.yearPremiered.split('T')[0] //   onChange={(newValue) => {\n          //     setValue(newValue);\n          //   }}\n          ,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h7\",\n          component: \"div\",\n          children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: movieEdit.name,\n            name: \"name\",\n            onChange: e => setMovieEdit({ ...movieEdit,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 143\n          }, this), \"Genres: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: movieEdit.genres,\n            name: \"genres\",\n            onChange: e => setMovieEdit({ ...movieEdit,\n              genres: e.target.value.split(',')\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 161\n          }, this), \"Image URL: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: movieEdit.image,\n            name: \"image\",\n            onChange: e => setMovieEdit({ ...movieEdit,\n              image: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 20\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 150\n          }, this), \"Premired: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: movieEdit.yearPremiered.split('T')[0],\n            name: \"yearPremiered\",\n            onChange: e => setMovieEdit({ ...movieEdit,\n              yearPremiered: e.target.value + \"T00:00:00.000Z\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 205\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: update,\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: cancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), \" \", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditMovieComp, \"64yy0RgGU5dmuU8zzAB7Mm6Yc3M=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector];\n});\n\n_c = EditMovieComp;\nexport default EditMovieComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovieComp\");","map":{"version":3,"sources":["/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/EditMovieComp.js"],"names":["axios","useState","useParams","useNavigate","useSelector","useDispatch","doEditMovie","Grid","Card","CardActions","CardContent","Button","Typography","TextField","DatePicker","moviesUrl","EditMovieComp","dispatch","navigate","username","movieid","movies","state","MoviesReducer","movie","find","_id","movieEdit","setMovieEdit","startDate","setStartDate","Date","console","log","yearPremiered","update","premiered","data","put","cancel","width","fontSize","name","e","target","value","genres","split","image","shrink","required","params","date"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { useState } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { doEditMovie } from '../redux/MoviesActions';\n\nimport Grid from \"@mui/material/Grid\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport TextField from \"@mui/material/TextField\";\n// import DatePicker from \"react-datepicker\";\n\n  import { DatePicker} from \"@/mui/material/pickers\";\n\nconst moviesUrl = 'http://localhost:8000/movies';\n\nconst EditMovieComp = () => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate();\n    const { username, movieid } = useParams();\n    const movies = useSelector(state => state.MoviesReducer.movies);\n    const movie = movies.find((movie)=> movie._id === movieid)\n    const [movieEdit, setMovieEdit] = useState(movie)\n    const [startDate, setStartDate] = useState(new Date());\n    console.log(movieEdit.yearPremiered)\n\n    const update = async () => {\n        console.log(movieEdit.premiered)\n        const { data } = await axios.put(`${moviesUrl}/${movie._id}`, movieEdit);\n        dispatch(doEditMovie(movieEdit));\n        console.log(data);\n        console.log(movieEdit);\n        navigate(`/${username}/MainPage`)\n    }\n\n    const cancel = () => {\n        navigate(`/${username}/MainPage`)\n    }\n\n  return (\n    <div>\n \n<Card sx={{ width: '50%' }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 17 }} color=\"text.secondary\" gutterBottom>\n            Edit Movie: {movie.name} \n        </Typography>   \n        <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Name:\"\n                    value={movieEdit.name}\n                    multiline\n                    name=\"name\"\n                    onChange={(e) =>\n                     setMovieEdit({ ...movieEdit, name: e.target.value })\n                    }\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Genres:\"\n                    value={movieEdit.genres}\n                    multiline\n                    name=\"genres\"\n                    onChange={(e) =>\n                        setMovieEdit({ ...movieEdit, genres: e.target.value.split(',') })\n                    }\n                    />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Image URL:\"\n                    value={movieEdit.image}\n                    multiline\n                    name=\"image\"\n                    onChange={(e) =>\n                    setMovieEdit({ ...movieEdit, image: e.target.value })\n                    }\n                    />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Premired:\"\n                    type=\"date\"\n                    value={movieEdit.yearPremiered.split('T')[0]}\n                    InputLabelProps={{ shrink: true, required: true }}\n                    multiline\n                    name=\"image\"\n                    onChange={(e) =>\n                    setMovieEdit({ ...movieEdit, yearPremiered : e.target.value+\"T00:00:00.000Z\" })\n                    }\n                    />\n                </Grid>\n        <DatePicker\n                \n          disableFuture\n          label=\"Responsive\"\n          openTo=\"year\"\n          views={['year', 'month', 'day']}\n          value={movieEdit.yearPremiered.split('T')[0]}\n        //   onChange={(newValue) => {\n        //     setValue(newValue);\n        //   }}\n          renderInput={(params) => <TextField {...params} />}\n        />\n        <DatePicker selected={startDate} onChange={(date) => setStartDate(date)} />\n        <Typography variant=\"h7\" component=\"div\">\n        Name: <input type=\"text\" value={movieEdit.name}  name=\"name\" onChange={(e) => setMovieEdit({ ...movieEdit, name: e.target.value })}/> <br />\n        Genres: <input type=\"text\" value={movieEdit.genres} name=\"genres\" onChange={(e) => setMovieEdit({ ...movieEdit, genres: e.target.value.split(',') })}/> <br />\n        Image URL: <input type=\"text\" value={movieEdit.image} name=\"image\" onChange={(e) => setMovieEdit({ ...movieEdit, image: e.target.value })}/> <br />\n        Premired: <input type=\"date\" value={movieEdit.yearPremiered.split('T')[0]} name=\"yearPremiered\" onChange={(e) => setMovieEdit({ ...movieEdit, yearPremiered : e.target.value+\"T00:00:00.000Z\" })}/> <br />\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button variant=\"contained\" onClick={update}>update</Button> {' '}\n        <Button variant=\"contained\" onClick={cancel}>Cancel</Button> {' '}\n      </CardActions>\n    </Card>\n    </div>\n  )\n}\n\nexport default EditMovieComp"]},"metadata":{},"sourceType":"module"}