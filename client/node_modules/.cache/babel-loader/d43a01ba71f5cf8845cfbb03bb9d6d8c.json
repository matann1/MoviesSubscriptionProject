{"ast":null,"code":"var _jsxFileName = \"/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/SubWatchedComp.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubWatchedComp = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const [me, setMe] = useState([]);\n  const subscriptions = useSelector(state => state.SubscriptionsReducer.subscriptions);\n  const members = subscriptions.filter(sub => sub.movieId === id);\n  console.log(members); // const members = useSelector(state => state.MembersReducer.members);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"SubWatchedComp\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SubWatchedComp, \"zHDOdcoYqOyRlcfBxpP2DZGF8kc=\", false, function () {\n  return [useSelector];\n});\n\n_c = SubWatchedComp;\nexport default SubWatchedComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubWatchedComp\");","map":{"version":3,"sources":["/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/SubWatchedComp.js"],"names":["useState","useSelector","SubWatchedComp","id","me","setMe","subscriptions","state","SubscriptionsReducer","members","filter","sub","movieId","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,cAAc,GAAG,QAAU;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AAC7B,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcL,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAMM,aAAa,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BF,aAArC,CAAjC;AAEA,QAAMG,OAAO,GAAGH,aAAa,CAACI,MAAd,CAAsBC,GAAD,IAAQA,GAAG,CAACC,OAAJ,KAAgBT,EAA7C,CAAhB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ,EAL6B,CAM7B;;AACF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAVD;;GAAMP,c;UAEoBD,W;;;KAFpBC,c;AAYN,eAAeA,cAAf","sourcesContent":["import { useState } from 'react'\nimport { useSelector } from 'react-redux';\n\nconst SubWatchedComp = ({id}) => {\n    const [me, setMe] = useState([])\n    const subscriptions = useSelector(state => state.SubscriptionsReducer.subscriptions);\n\n    const members = subscriptions.filter((sub)=> sub.movieId === id)\n    console.log(members)\n    // const members = useSelector(state => state.MembersReducer.members);\n  return (\n    <div>SubWatchedComp</div>\n  )\n}\n\nexport default SubWatchedComp"]},"metadata":{},"sourceType":"module"}