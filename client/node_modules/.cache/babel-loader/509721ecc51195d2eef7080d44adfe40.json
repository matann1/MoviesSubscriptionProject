{"ast":null,"code":"var _jsxFileName = \"/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/MemberMovieWatched.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport AddNewMovieToMember from './AddNewMovieToMember';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemberMovieWatched = _ref => {\n  _s();\n\n  let {\n    id\n  } = _ref;\n  const subscriptions = useSelector(state => state.SubscriptionsReducer.subscriptions);\n  const movies = useSelector(state => state.MoviesReducer.movies);\n  const users = useSelector(state => state.UsersReducer.users);\n  const user = users.find(user => user.username === sessionStorage.getItem('key').charAt(0).toLowerCase());\n  const subscriptionsMember = subscriptions.filter(sub => sub.memberId === id);\n  const [toggle, setToggle] = useState(false);\n\n  const toggleChecked = () => setToggle(toggle => !toggle);\n\n  const memberRep = subscriptionsMember.map((mem, index) => {\n    return movies.map(mov => {\n      if (mov._id === mem.movieId) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/movies/editmovie/${mov._id}`,\n            children: [\" \", mov.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 45\n          }, this), ',  ', mem.date]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 41\n        }, this);\n      }\n\n      return null;\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Movies Watched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: toggleChecked,\n      children: \"Subscribe to new movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), toggle && user.permission && /*#__PURE__*/_jsxDEV(AddNewMovieToMember, {\n      movies: movies,\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 35\n    }, this), !toggle && null, /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: memberRep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 1\n  }, this);\n};\n\n_s(MemberMovieWatched, \"W/yTJd7TF8GOsCIRnwSzuXRlBy4=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = MemberMovieWatched;\nexport default MemberMovieWatched;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemberMovieWatched\");","map":{"version":3,"sources":["/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/MemberMovieWatched.js"],"names":["useSelector","Link","useState","AddNewMovieToMember","MemberMovieWatched","id","subscriptions","state","SubscriptionsReducer","movies","MoviesReducer","users","UsersReducer","user","find","username","sessionStorage","getItem","charAt","toLowerCase","subscriptionsMember","filter","sub","memberId","toggle","setToggle","toggleChecked","memberRep","map","mem","index","mov","_id","movieId","name","date","permission"],"mappings":";;;AACA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;;;AAGA,MAAMC,kBAAkB,GAAG,QAAU;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AACjC,QAAMC,aAAa,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BF,aAArC,CAAjC;AACA,QAAMG,MAAM,GAAGT,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACG,aAAN,CAAoBD,MAA9B,CAA1B;AACA,QAAME,KAAK,GAAGX,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACK,YAAN,CAAmBD,KAA7B,CAAzB;AACA,QAAME,IAAI,GAAGF,KAAK,CAACG,IAAN,CAAYD,IAAD,IAASA,IAAI,CAACE,QAAL,KAAmBC,cAAc,CAACC,OAAf,CAAuB,KAAvB,CAAD,CAAgCC,MAAhC,CAAuC,CAAvC,EAA0CC,WAA1C,EAAtC,CAAb;AACA,QAAMC,mBAAmB,GAAGd,aAAa,CAACe,MAAd,CAAsBC,GAAD,IAAQA,GAAG,CAACC,QAAJ,KAAiBlB,EAA9C,CAA5B;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMwB,aAAa,GAAG,MAAMD,SAAS,CAACD,MAAM,IAAI,CAACA,MAAZ,CAArC;;AAEA,QAAMG,SAAS,GAAGP,mBAAmB,CAACQ,GAApB,CAAwB,CAACC,GAAD,EAAMC,KAAN,KAAc;AACpC,WACIrB,MAAM,CAACmB,GAAP,CAAYG,GAAD,IAAO;AACd,UAAGA,GAAG,CAACC,GAAJ,KAAYH,GAAG,CAACI,OAAnB,EAA2B;AACvB,4BACI;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,qBAAoBF,GAAG,CAACC,GAAI,EAAvC;AAAA,4BAA4CD,GAAG,CAACG,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EACiE,KADjE,EAEKL,GAAG,CAACM,IAFT;AAAA,WAASL,KAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH;;AACD,aAAO,IAAP;AACH,KAVD,CADJ;AAaP,GAdK,CAAlB;AAeJ,sBACA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,oBACoC;AAAA;AAAA;AAAA;AAAA,YADpC,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEJ,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKF,MAAM,IAAIX,IAAI,CAACuB,UAAf,iBAA6B,QAAC,mBAAD;AAAqB,MAAA,MAAM,EAAE3B,MAA7B;AAAqC,MAAA,EAAE,EAAEJ;AAAzC;AAAA;AAAA;AAAA;AAAA,YAHlC,EAIK,CAACmB,MAAD,IAAW,IAJhB,eAKI;AAAA,gBACKG;AADL;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAWC,CAnCD;;GAAMvB,kB;UACoBJ,W,EACPA,W,EACDA,W;;;KAHZI,kB;AAqCN,eAAeA,kBAAf","sourcesContent":["\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react'\nimport AddNewMovieToMember from './AddNewMovieToMember'\n\n\nconst MemberMovieWatched = ({id}) => {\n    const subscriptions = useSelector(state => state.SubscriptionsReducer.subscriptions);\n    const movies = useSelector(state => state.MoviesReducer.movies);\n    const users = useSelector(state => state.UsersReducer.users);\n    const user = users.find((user)=> user.username === (sessionStorage.getItem('key')).charAt(0).toLowerCase())\n    const subscriptionsMember = subscriptions.filter((sub)=> sub.memberId === id)\n    const [toggle, setToggle] = useState(false);\n    const toggleChecked = () => setToggle(toggle => !toggle);\n\n    const memberRep = subscriptionsMember.map((mem, index)=>{\n                        return (\n                            movies.map((mov)=>{\n                                if(mov._id === mem.movieId){\n                                    return (\n                                        <li key={index}>\n                                            <Link to={`/movies/editmovie/${mov._id}`}> {mov.name}</Link>{',  '}\n                                            {mem.date} \n                                        </li>\n                                    )\n                                }\n                                return null;\n                            })\n                        )\n                })\nreturn (\n<div>\n    <strong>Movies Watched</strong> <br />\n    <button type=\"button\" onClick={toggleChecked}>Subscribe to new movie</button>\n    {toggle && user.permission && <AddNewMovieToMember movies={movies} id={id}/> }\n    {!toggle && null}\n    <ul>\n        {memberRep}\n    </ul>\n</div>\n)\n}\n\nexport default MemberMovieWatched"]},"metadata":{},"sourceType":"module"}