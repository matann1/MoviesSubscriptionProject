{"ast":null,"code":"var _jsxFileName = \"/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/MoviesComp.js\",\n    _s = $RefreshSig$();\n\nimport TextField from \"@mui/material/TextField\";\nimport Button from '@mui/material/Button';\nimport MovieComp from './MovieComp';\nimport { ToggleButtonGroup, ToggleButton } from \"@mui/material\";\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MoviesComp = () => {\n  _s();\n\n  const movies = useSelector(state => state.MoviesReducer.movies);\n  const navigate = useNavigate();\n  const [searchMovie, setSearchMovie] = useState('');\n  const [moviesAfterSreach, setMoviesAfterSreach] = useState([]);\n  const [currentAlignment, setCurrentAlignment] = useState(\"allmovies\");\n\n  const findMovie = () => {\n    setMoviesAfterSreach(movies.filter(movie => movie.nametoLowerCase().includes(searchMovie.toLowerCase())));\n    setCurrentAlignment('searchmovies');\n  };\n\n  useEffect(() => {\n    if (searchMovie === '') {\n      setCurrentAlignment('allmovies');\n    }\n  }, [searchMovie]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '500px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n      value: currentAlignment,\n      onChange: (event, newAlignment) => {\n        setCurrentAlignment(newAlignment);\n      },\n      exclusive: true,\n      variant: \"contained\",\n      \"aria-label\": \"text formatting\",\n      color: \"primary\",\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"allmovies\",\n        children: \"All Movies \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n        value: \"addmovie\",\n        children: \"Add movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(TextField, {\n      size: \"small\",\n      label: \"Find Movie\",\n      onChange: e => setSearchMovie(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), \" \", ' ', /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: findMovie,\n      children: \"Find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 71\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 78\n    }, this), currentAlignment === 'allmovies' ? movies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(MovieComp, {\n        movie: movie\n      }, movie._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 20\n      }, this);\n    }) : null, currentAlignment === 'searchmovies' ? moviesAfterSreach.map(movie => {\n      return /*#__PURE__*/_jsxDEV(MovieComp, {\n        movie: movie\n      }, movie._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this);\n    }) : null, currentAlignment === 'addmovie' ? navigate('/movies/addmovie') : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoviesComp, \"J1Fi09paNKL5yLQG9+QAFc/rpZ8=\", false, function () {\n  return [useSelector, useNavigate];\n});\n\n_c = MoviesComp;\nexport default MoviesComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesComp\");","map":{"version":3,"sources":["/Users/matanneyman/Desktop/full stack/finalProject/client/client/src/components/MoviesComp.js"],"names":["TextField","Button","MovieComp","ToggleButtonGroup","ToggleButton","useState","useEffect","useSelector","useNavigate","MoviesComp","movies","state","MoviesReducer","navigate","searchMovie","setSearchMovie","moviesAfterSreach","setMoviesAfterSreach","currentAlignment","setCurrentAlignment","findMovie","filter","movie","nametoLowerCase","includes","toLowerCase","width","event","newAlignment","e","target","value","map","_id"],"mappings":"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","sourcesContent":["import TextField from \"@mui/material/TextField\";\nimport Button from '@mui/material/Button';\nimport MovieComp from './MovieComp'\n\nimport { ToggleButtonGroup, ToggleButton } from \"@mui/material\";\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nconst MoviesComp = () => {\n    const movies = useSelector(state => state.MoviesReducer.movies);\n    const navigate = useNavigate();\n    const [searchMovie, setSearchMovie] = useState('')\n    const [moviesAfterSreach, setMoviesAfterSreach] = useState([])\n    const [currentAlignment, setCurrentAlignment] = useState(\"allmovies\");\n\n    const findMovie = () =>{\n        setMoviesAfterSreach(movies.filter((movie)=> movie.nametoLowerCase().includes(searchMovie.toLowerCase())))\n        setCurrentAlignment('searchmovies');\n    }\n    useEffect(() => {\n      if(searchMovie === ''){\n        setCurrentAlignment('allmovies');\n      }\n    }, [searchMovie])\n    \n  return (\n    <div style={{ width: '500px'}}>\n        <h2>Movies</h2>\n        <br />\n      \n    <ToggleButtonGroup\n      value={currentAlignment}\n      onChange={(event, newAlignment) => {\n        setCurrentAlignment(newAlignment);\n      }} \n      exclusive\n      variant=\"contained\"\n      aria-label=\"text formatting\"\n      color=\"primary\"\n      size='small'\n    >\n      <ToggleButton value=\"allmovies\">All Movies </ToggleButton>\n      <ToggleButton value=\"addmovie\">Add movie</ToggleButton>\n\n    </ToggleButtonGroup> {' '}\n    <TextField\n    size=\"small\"\n          label=\"Find Movie\"\n          onChange={(e)=> setSearchMovie(e.target.value)}\n        /> {' '}\n        <Button variant=\"contained\" onClick={findMovie}>Find</Button> <br /> <br />\n\n        {currentAlignment==='allmovies'? \n        movies.map((movie)=> {\n            return <MovieComp key={movie._id} movie={movie}/> \n        }) : null}\n        {currentAlignment==='searchmovies'? \n        moviesAfterSreach.map((movie)=> {\n            return <MovieComp key={movie._id} movie={movie}/> \n        }) : null}\n        {currentAlignment==='addmovie'? \n           navigate('/movies/addmovie') : null\n    }\n    </div>\n  )\n}\n\nexport default MoviesComp"]},"metadata":{},"sourceType":"module"}